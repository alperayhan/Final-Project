{
 "Resources": {
  "BitirmeBackendFargateServiceIAMRole680A6FBD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "BitirmeBackendFargateServiceIAMRole"
   },
   "Metadata": {
    "aws:cdk:path": "BitirmeECSFargateStack/BitirmeBackendFargateServiceIAMRole/Resource"
   }
  },
  "BitirmeBackendFargateServiceIAMRoleDefaultPolicy85D9A35B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:GetAuthorizationToken",
        "s3:*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:eu-central-1:717917102233:repository/bitirme-backend"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BitirmeBackendFargateServiceIAMRoleDefaultPolicy85D9A35B",
    "Roles": [
     {
      "Ref": "BitirmeBackendFargateServiceIAMRole680A6FBD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BitirmeECSFargateStack/BitirmeBackendFargateServiceIAMRole/DefaultPolicy/Resource"
   }
  },
  "BitirmeBackendFargateServiceTaskDefTaskRole812DDA16": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BitirmeECSFargateStack/BitirmeBackendFargateServiceTaskDef/TaskRole/Resource"
   }
  },
  "BitirmeBackendFargateServiceTaskDef5846DD0F": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "DB_PASSWORD",
        "Value": {
         "Ref": "DBPASSWORDParameter"
        }
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::Join": [
               "",
               [
                "arn:",
                {
                 "Ref": "AWS::Partition"
                },
                ":ecr:eu-central-1:717917102233:repository/bitirme-backend"
               ]
              ]
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::Join": [
               "",
               [
                "arn:",
                {
                 "Ref": "AWS::Partition"
                },
                ":ecr:eu-central-1:717917102233:repository/bitirme-backend"
               ]
              ]
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/bitirme-backend:latest"
        ]
       ]
      },
      "MemoryReservation": 512,
      "Name": "bitirme-backend-service",
      "PortMappings": [
       {
        "ContainerPort": 8080,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "512",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "BitirmeBackendFargateServiceIAMRole680A6FBD",
      "Arn"
     ]
    },
    "Family": "BitirmeBackendFargateServiceTaskDef",
    "Memory": "1024",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "BitirmeBackendFargateServiceTaskDefTaskRole812DDA16",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BitirmeECSFargateStack/BitirmeBackendFargateServiceTaskDef/Resource"
   }
  },
  "BitirmeBackendECSFargateSecurityGroup4CED8204": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "BitirmeECSFargateStack/BitirmeBackendECSFargateSecurityGroup",
    "GroupName": "bitirme-backend-ecs-farget-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": "vpc-024cc70aca0f57d32"
   },
   "Metadata": {
    "aws:cdk:path": "BitirmeECSFargateStack/BitirmeBackendECSFargateSecurityGroup/Resource"
   }
  },
  "BitirmeBackendECSFargateSecurityGroupfromBitirmeECSFargateStackALBsgA6150BA64915365535254C20DF": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "allow access container ports from ALB",
    "FromPort": 49153,
    "GroupId": {
     "Fn::GetAtt": [
      "BitirmeBackendECSFargateSecurityGroup4CED8204",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ALBsgDBC6A4CD",
      "GroupId"
     ]
    },
    "ToPort": 65535
   },
   "Metadata": {
    "aws:cdk:path": "BitirmeECSFargateStack/BitirmeBackendECSFargateSecurityGroup/from BitirmeECSFargateStackALBsgA6150BA6:49153-65535"
   }
  },
  "ALBsgDBC6A4CD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "BitirmeECSFargateStack/ALBsg",
    "GroupName": "bitirme-cloud-alb-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "allow access from anywhere to http port",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "allow access from anywhere to https port",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": "vpc-024cc70aca0f57d32"
   },
   "Metadata": {
    "aws:cdk:path": "BitirmeECSFargateStack/ALBsg/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31PTQ/BQBD9Le7bQTk4I8RNyl3Gdshouyszu0Sa/ndtEYmD03vz5uO9SSGdwXiAd01sXiQlH6HeBbSFyUh9FEum7R1qncA82oLCHJUMYwV15ksyi5PrcetLto+ufLHGkFWoVyhnDLRHLZZ0YseBveumfhXvArIj+WrdhbQNQzYKh8dafLx2m/+FjTsLqTZNHwUFKwokfczPPy1v7fK3ifM5wUWHt/EMpjAaXJQ5kegCVwTZC590tqruJQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "BitirmeECSFargateStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "DBPASSWORDParameter": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/app/DB_PASSWORD"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}